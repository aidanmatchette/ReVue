{"ast":null,"code":"import axios from \"axios\";\nimport dashboardAPI from \"./dashboardAPI\";\n\nconst tryCatchFetch = async axiosCall => {\n  try {\n    const response = await axiosCall();\n    return response.data || {\n      message: 'success'\n    };\n  } catch (e) {\n    console.error(\"---- Error ----\", e.response ? e.response : e);\n    return null;\n  }\n}; // {headers: {'X-CSRFToken': dashboardAPI.getCSRFToken()}}\n\n\nconst cryptoMagicAPI = {};\n\ncryptoMagicAPI.createPortfolio = async newPortfolioForm => {\n  return await tryCatchFetch(() => axios.post('/portfolio/', newPortfolioForm, {\n    headers: {\n      'X-CSRFToken': dashboardAPI.getCSRFToken()\n    }\n  }));\n};\n\ncryptoMagicAPI.listPortfoliosByUser = async () => {\n  return await tryCatchFetch(() => axios.get(`/portfolio/`, null, {\n    headers: {\n      'X-CSRFToken': dashboardAPI.getCSRFToken()\n    }\n  }));\n};\n\ncryptoMagicAPI.addCoinToPortfolio = async addCoinForm => {\n  return await tryCatchFetch(() => axios.post(`/crypto-holdings/`, addCoinForm, {\n    headers: {\n      'X-CSRFToken': dashboardAPI.getCSRFToken()\n    }\n  }));\n};\n\ncryptoMagicAPI.getPortfolioHoldings = async portfolioId => {\n  return await tryCatchFetch(() => axios.get(`/portfolio/${portfolioId}`, null, {\n    headers: {\n      'X-CSRFToken': dashboardAPI.getCSRFToken()\n    }\n  }));\n};\n\ncryptoMagicAPI.deleteHoldingById = async holdingId => {\n  return await tryCatchFetch(() => axios.delete(`/crypto-holdings/${holdingId}`, {\n    headers: {\n      'X-CSRFToken': dashboardAPI.getCSRFToken()\n    }\n  }));\n};\n\ncryptoMagicAPI.deletePortfolioById = async portfolioId => {\n  return await tryCatchFetch(() => axios.delete(`/portfolio/${portfolioId}`, {\n    headers: {\n      'X-CSRFToken': dashboardAPI.getCSRFToken()\n    }\n  }));\n};\n\nexport default cryptoMagicAPI;","map":{"version":3,"sources":["/Users/aidanmatchette/dev/projects/vetfit_frontend/src/api/cryptoAPI.js"],"names":["axios","dashboardAPI","tryCatchFetch","axiosCall","response","data","message","e","console","error","cryptoMagicAPI","createPortfolio","newPortfolioForm","post","headers","getCSRFToken","listPortfoliosByUser","get","addCoinToPortfolio","addCoinForm","getPortfolioHoldings","portfolioId","deleteHoldingById","holdingId","delete","deletePortfolioById"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,MAAMC,aAAa,GAAG,MAAOC,SAAP,IAAqB;AACvC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMD,SAAS,EAAhC;AACA,WAAOC,QAAQ,CAACC,IAAT,IAAiB;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAxB;AACH,GAHD,CAGE,OAAOC,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAc,iBAAd,EAAiCF,CAAC,CAACH,QAAF,GAAaG,CAAC,CAACH,QAAf,GAA0BG,CAA3D;AACA,WAAO,IAAP;AACH;AACJ,CARD,C,CAUA;;;AAEA,MAAMG,cAAc,GAAG,EAAvB;;AAEAA,cAAc,CAACC,eAAf,GAAiC,MAAOC,gBAAP,IAA4B;AACzD,SAAO,MAAMV,aAAa,CAAC,MAAMF,KAAK,CAACa,IAAN,CAAW,aAAX,EAA0BD,gBAA1B,EAA4C;AAACE,IAAAA,OAAO,EAAE;AAAC,qBAAeb,YAAY,CAACc,YAAb;AAAhB;AAAV,GAA5C,CAAP,CAA1B;AACH,CAFD;;AAIAL,cAAc,CAACM,oBAAf,GAAsC,YAAY;AAC9C,SAAO,MAAMd,aAAa,CAAC,MAAMF,KAAK,CAACiB,GAAN,CAAW,aAAX,EAAyB,IAAzB,EAA+B;AAACH,IAAAA,OAAO,EAAE;AAAC,qBAAeb,YAAY,CAACc,YAAb;AAAhB;AAAV,GAA/B,CAAP,CAA1B;AACH,CAFD;;AAIAL,cAAc,CAACQ,kBAAf,GAAoC,MAAOC,WAAP,IAAuB;AACvD,SAAO,MAAMjB,aAAa,CAAC,MAAMF,KAAK,CAACa,IAAN,CAAY,mBAAZ,EAAgCM,WAAhC,EAA6C;AAACL,IAAAA,OAAO,EAAE;AAAC,qBAAeb,YAAY,CAACc,YAAb;AAAhB;AAAV,GAA7C,CAAP,CAA1B;AACH,CAFD;;AAGAL,cAAc,CAACU,oBAAf,GAAsC,MAAOC,WAAP,IAAuB;AACzD,SAAO,MAAMnB,aAAa,CAAC,MAAMF,KAAK,CAACiB,GAAN,CAAW,cAAaI,WAAY,EAApC,EAAuC,IAAvC,EAA8C;AAACP,IAAAA,OAAO,EAAE;AAAC,qBAAeb,YAAY,CAACc,YAAb;AAAhB;AAAV,GAA9C,CAAP,CAA1B;AACH,CAFD;;AAGAL,cAAc,CAACY,iBAAf,GAAkC,MAAOC,SAAP,IAAqB;AACnD,SAAO,MAAMrB,aAAa,CAAC,MAAMF,KAAK,CAACwB,MAAN,CAAc,oBAAmBD,SAAU,EAA3C,EAA8C;AAACT,IAAAA,OAAO,EAAE;AAAC,qBAAeb,YAAY,CAACc,YAAb;AAAhB;AAAV,GAA9C,CAAP,CAA1B;AACH,CAFD;;AAGAL,cAAc,CAACe,mBAAf,GAAoC,MAAOJ,WAAP,IAAuB;AACvD,SAAO,MAAMnB,aAAa,CAAC,MAAMF,KAAK,CAACwB,MAAN,CAAc,cAAaH,WAAY,EAAvC,EAA0C;AAACP,IAAAA,OAAO,EAAE;AAAC,qBAAeb,YAAY,CAACc,YAAb;AAAhB;AAAV,GAA1C,CAAP,CAA1B;AACH,CAFD;;AAGA,eAAeL,cAAf","sourcesContent":["import axios from \"axios\"\nimport dashboardAPI from \"./dashboardAPI\"\n\n\nconst tryCatchFetch = async (axiosCall) => {\n    try {\n        const response = await axiosCall()\n        return response.data || {message: 'success'}\n    } catch (e) {\n        console.error(\"---- Error ----\", e.response ? e.response : e)\n        return null\n    }\n}\n\n// {headers: {'X-CSRFToken': dashboardAPI.getCSRFToken()}}\n\nconst cryptoMagicAPI = {}\n\ncryptoMagicAPI.createPortfolio = async (newPortfolioForm) => {\n    return await tryCatchFetch(() => axios.post('/portfolio/', newPortfolioForm, {headers: {'X-CSRFToken': dashboardAPI.getCSRFToken()}}))\n}\n\ncryptoMagicAPI.listPortfoliosByUser = async () => {\n    return await tryCatchFetch(() => axios.get(`/portfolio/`, null, {headers: {'X-CSRFToken': dashboardAPI.getCSRFToken()}}))\n}\n\ncryptoMagicAPI.addCoinToPortfolio = async (addCoinForm) => {\n    return await tryCatchFetch(() => axios.post(`/crypto-holdings/`, addCoinForm, {headers: {'X-CSRFToken': dashboardAPI.getCSRFToken()}}))\n}\ncryptoMagicAPI.getPortfolioHoldings = async (portfolioId) => {\n    return await tryCatchFetch(() => axios.get(`/portfolio/${portfolioId}`, null , {headers: {'X-CSRFToken': dashboardAPI.getCSRFToken()}}))\n}\ncryptoMagicAPI.deleteHoldingById= async (holdingId) => {\n    return await tryCatchFetch(() => axios.delete(`/crypto-holdings/${holdingId}`, {headers: {'X-CSRFToken': dashboardAPI.getCSRFToken()}}))\n}\ncryptoMagicAPI.deletePortfolioById= async (portfolioId) => {\n    return await tryCatchFetch(() => axios.delete(`/portfolio/${portfolioId}`, {headers: {'X-CSRFToken': dashboardAPI.getCSRFToken()}}))\n}\nexport default cryptoMagicAPI\n"]},"metadata":{},"sourceType":"module"}