{"ast":null,"code":"var _jsxFileName = \"/Users/aidanmatchette/dev/projects/vetfit_frontend/src/components/AddCoin/AddCoin.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, OutlinedInput, Select } from '@mui/material';\nimport React, { useState } from 'react';\nimport cryptoMagicAPI from '../../api/cryptoAPI';\nimport { CryptoState } from '../../Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCoin = _ref => {\n  _s();\n\n  let {\n    setIsAdded,\n    coinName,\n    id\n  } = _ref;\n  const {\n    userPortfolios\n  } = CryptoState();\n  const [portfolioToAdd, setPortfolioToAdd] = useState(null);\n  const [open, setOpen] = useState(true);\n  const portfolioOptions = userPortfolios === null || userPortfolios === void 0 ? void 0 : userPortfolios.map((portfolio, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: portfolio.id,\n      children: portfolio.portfolio_name\n    }, `${portfolio.portfolio_name}-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  });\n\n  const handleChange = event => {\n    setPortfolioToAdd(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setOpen(false);\n    let addCoinForm = {\n      portfolio: portfolioToAdd,\n      coin_id: id\n    };\n    const data = await cryptoMagicAPI.addCoinToPortfolio(addCoinForm);\n\n    if (data) {\n      setIsAdded(false);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setIsAdded(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: true,\n      maxWidth: 'sm',\n      disableEscapeKeyDown: true,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Select which portfolio to add \", coinName, \" too\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            name: \"newCoin\",\n            onSubmit: handleSubmit,\n            sx: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              justifyContent: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                m: 1,\n                minWidth: 120\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"demo-dialog-native\",\n                children: \"Portfolios\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                native: true,\n                onChange: handleChange,\n                input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  label: \"Portfolio\",\n                  id: \"portfolio-dialog-native\",\n                  sx: {\n                    width: 200,\n                    alignItems: 'center'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 32\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"None\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 29\n                }, this), portfolioOptions]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            sx: {\n              color: 'white',\n              background: 'purple',\n              borderRadius: \"10px\",\n              \":hover\": {\n                background: '#46016b'\n              }\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            for: \"newCoin\",\n            sx: {\n              color: 'white',\n              background: 'purple',\n              borderRadius: \"10px\",\n              \":hover\": {\n                background: '#46016b'\n              }\n            },\n            children: \"Ok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCoin, \"l+yVy7mn7qpbpIHMjYieWriJl9Q=\");\n\n_c = AddCoin;\nexport default AddCoin;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCoin\");","map":{"version":3,"sources":["/Users/aidanmatchette/dev/projects/vetfit_frontend/src/components/AddCoin/AddCoin.js"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","InputLabel","MenuItem","OutlinedInput","Select","React","useState","cryptoMagicAPI","CryptoState","AddCoin","setIsAdded","coinName","id","userPortfolios","portfolioToAdd","setPortfolioToAdd","open","setOpen","portfolioOptions","map","portfolio","index","portfolio_name","handleChange","event","target","value","handleSubmit","preventDefault","addCoinForm","coin_id","data","addCoinToPortfolio","handleClose","display","flexWrap","justifyContent","m","minWidth","width","alignItems","color","background","borderRadius"],"mappings":"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","sourcesContent":["import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, OutlinedInput, Select } from '@mui/material'\nimport React, { useState } from 'react'\nimport cryptoMagicAPI from '../../api/cryptoAPI';\nimport { CryptoState } from '../../Context'\n\nconst AddCoin = ({setIsAdded, coinName, id}) => {\n    const {userPortfolios} = CryptoState();\n    const [portfolioToAdd, setPortfolioToAdd] = useState(null)\n    const [open,setOpen] = useState(true)\n\n    const portfolioOptions = userPortfolios?.map((portfolio, index) => {\n        return(\n            <option key={`${portfolio.portfolio_name}-${index}`} value={portfolio.id}>{portfolio.portfolio_name}</option>\n        )\n    })\n    const handleChange = (event) => {\n        setPortfolioToAdd(event.target.value)\n    }\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        setOpen(false)\n\n        let addCoinForm = {\n            portfolio: portfolioToAdd,\n            coin_id: id\n        }\n        const data = await cryptoMagicAPI.addCoinToPortfolio(addCoinForm)\n        if (data) {\n            setIsAdded(false)\n        }\n    }\n    const handleClose = () => {\n        setOpen(false)\n        setIsAdded(false)\n    }\n  return (\n    <div>\n    <Dialog fullWidth={true}\n        maxWidth={'sm'}\n        disableEscapeKeyDown open={open} onClose={handleClose}>\n      <DialogTitle>Select which portfolio to add {coinName} too</DialogTitle>\n        <form onSubmit={handleSubmit}>\n            <DialogContent>\n                    <Box component=\"form\" name='newCoin' onSubmit={handleSubmit} sx={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\n                    <FormControl sx={{ m: 1, minWidth: 120 }}>\n                        <InputLabel htmlFor=\"demo-dialog-native\">Portfolios</InputLabel>\n                        <Select\n                        native\n                        onChange={handleChange}\n                        input={<OutlinedInput label=\"Portfolio\" id=\"portfolio-dialog-native\" sx={{width: 200, alignItems: 'center'}}/>}\n                        >\n                            <option value='None'>None</option>\n                            {portfolioOptions}\n                        </Select>\n                    </FormControl>\n                    </Box>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} sx={{color: 'white', background: 'purple', borderRadius: \"10px\", \":hover\": {background: '#46016b'}}}>Cancel</Button>\n                <Button type='submit' for='newCoin'sx={{color: 'white', background: 'purple', borderRadius: \"10px\", \":hover\": {background: '#46016b'}}} >Ok</Button>\n            </DialogActions>\n        </form>\n\n    </Dialog>\n  </div>\n  )\n}\n\nexport default AddCoin"]},"metadata":{},"sourceType":"module"}