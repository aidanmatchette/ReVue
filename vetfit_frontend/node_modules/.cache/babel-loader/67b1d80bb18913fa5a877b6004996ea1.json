{"ast":null,"code":"var _jsxFileName = \"/Users/aidanmatchette/dev/projects/vetfit_frontend/src/Context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport cryptoMagicAPI from './api/cryptoAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoMagic = /*#__PURE__*/createContext();\n\nconst Context = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currency, setCurrency] = useState('usd');\n  const [symbol, setSymbol] = useState('$');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userPortfolios, setUserPortfolios] = useState(null);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    if (currency === 'jpy') setSymbol('¥');else if (currency === 'gbp') setSymbol('£');else if (currency === 'eur') setSymbol('€');else if (currency === 'usd' || currency === 'cad') setSymbol('$');\n  }, [currency]);\n  useEffect(() => {\n    if (localStorage.getItem('user_id')) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n  useEffect(() => {\n    getPortfoliosByUser();\n  }, []);\n\n  const getPortfoliosByUser = async () => {\n    const portfolios = await cryptoMagicAPI.listPortfoliosByUser();\n    setUserPortfolios(portfolios);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CryptoMagic.Provider, {\n    value: {\n      currency,\n      symbol,\n      setCurrency,\n      isAuthenticated,\n      setIsAuthenticated,\n      userPortfolios,\n      setUserPortfolios,\n      search,\n      setSearch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Context, \"B2sMAw9THUm1Lq3wKxDW6e0kS9k=\");\n\n_c = Context;\nexport default Context;\nexport const CryptoState = () => {\n  _s2();\n\n  return useContext(CryptoMagic);\n};\n\n_s2(CryptoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = CryptoState;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Context\");\n$RefreshReg$(_c2, \"CryptoState\");","map":{"version":3,"sources":["/Users/aidanmatchette/dev/projects/vetfit_frontend/src/Context.js"],"names":["React","createContext","useContext","useEffect","useState","cryptoMagicAPI","CryptoMagic","Context","children","currency","setCurrency","symbol","setSymbol","isAuthenticated","setIsAuthenticated","userPortfolios","setUserPortfolios","search","setSearch","localStorage","getItem","getPortfoliosByUser","portfolios","listPortfoliosByUser","CryptoState"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,OAAOC,cAAP,MAA2B,iBAA3B;;AAEA,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;;AAIA,MAAMM,OAAO,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,QAAQ,KAAK,KAAjB,EAAwBG,SAAS,CAAC,GAAD,CAAT,CAAxB,KACK,IAAIH,QAAQ,KAAK,KAAjB,EAAwBG,SAAS,CAAC,GAAD,CAAT,CAAxB,KACA,IAAIH,QAAQ,KAAK,KAAjB,EAAwBG,SAAS,CAAC,GAAD,CAAT,CAAxB,KACA,IAAIH,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,KAAvC,EAA8CG,SAAS,CAAC,GAAD,CAAT;AAEtD,GANQ,EAMP,CAACH,QAAD,CANO,CAAT;AAQAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGgB,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAH,EAAoC;AAChCN,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,mBAAmB;AACpB,GAFM,EAEL,EAFK,CAAT;;AAIA,QAAMA,mBAAmB,GAAG,YAAY;AACpC,UAAMC,UAAU,GAAG,MAAMjB,cAAc,CAACkB,oBAAf,EAAzB;AACAP,IAAAA,iBAAiB,CAACM,UAAD,CAAjB;AACH,GAHD;;AAMF,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACb,MAAAA,QAAD;AAAUE,MAAAA,MAAV;AAAiBD,MAAAA,WAAjB;AAA8BG,MAAAA,eAA9B;AAA+CC,MAAAA,kBAA/C;AAAmEC,MAAAA,cAAnE;AAAmFC,MAAAA,iBAAnF;AAAqGC,MAAAA,MAArG;AAA6GC,MAAAA;AAA7G,KAA7B;AAAA,cACKV;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKD,CArCD;;GAAMD,O;;KAAAA,O;AAuCN,eAAeA,OAAf;AAGA,OAAO,MAAMiB,WAAW,GAAG,MAAM;AAAA;;AAC7B,SAAOtB,UAAU,CAACI,WAAD,CAAjB;AACH,CAFM;;IAAMkB,W;;MAAAA,W","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react'\nimport cryptoMagicAPI from './api/cryptoAPI'\n\nconst CryptoMagic = createContext()\n\n\n\nconst Context = ({children}) => {\n    const [currency, setCurrency] = useState('usd')\n    const [symbol, setSymbol] = useState('$')\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\n    const [userPortfolios, setUserPortfolios] = useState(null)\n    const [search, setSearch] = useState('')\n\n\n    useEffect(() => {\n        if (currency === 'jpy') setSymbol('¥');\n        else if (currency === 'gbp') setSymbol('£');\n        else if (currency === 'eur') setSymbol('€');\n        else if (currency === 'usd' || currency === 'cad') setSymbol('$')\n\n    },[currency])\n\n    useEffect(() => {\n        if(localStorage.getItem('user_id')) {\n            setIsAuthenticated(true)\n        }\n    }, [])\n\n    useEffect(() => {\n        getPortfoliosByUser()\n      },[])\n    \n    const getPortfoliosByUser = async () => {\n        const portfolios = await cryptoMagicAPI.listPortfoliosByUser()\n        setUserPortfolios(portfolios)\n    }\n\n    \n  return (\n      <CryptoMagic.Provider value={{currency,symbol,setCurrency, isAuthenticated, setIsAuthenticated, userPortfolios, setUserPortfolios,search, setSearch}}>\n          {children}\n      </CryptoMagic.Provider>\n  )\n}\n\nexport default Context;\n\n\nexport const CryptoState = () => {\n    return useContext(CryptoMagic)\n}\n"]},"metadata":{},"sourceType":"module"}