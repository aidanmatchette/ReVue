{"ast":null,"code":"var _jsxFileName = \"/Users/aidanmatchette/dev/projects/vetfit_frontend/src/components/NewPortfolio/NewPortfolio.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Grid, InputLabel, TextField } from '@mui/material';\nimport cryptoMagicAPI from '../../api/cryptoAPI';\nimport getPortfoliosByUser from '../../Context.js';\nimport React, { useState } from 'react';\nimport { CryptoState } from '../../Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPortfolio = _ref => {\n  _s();\n\n  let {\n    setAddPortfolio\n  } = _ref;\n  const {\n    setUserPortfolios\n  } = CryptoState();\n  const [open, setOpen] = useState(true);\n\n  const getPortfoliosByUser = async () => {\n    const portfolios = await cryptoMagicAPI.listPortfoliosByUser();\n    setUserPortfolios(portfolios);\n  };\n\n  const handleNewPortfolio = async event => {\n    event.preventDefault();\n    setOpen(false);\n    const newPortfolioForm = {\n      portfolio_name: event.target.elements['name'].value,\n      owner: localStorage.getItem('user_id'),\n      holdings: []\n    };\n    const data = await cryptoMagicAPI.createPortfolio(newPortfolioForm);\n\n    if (data) {\n      setAddPortfolio(false);\n      getPortfoliosByUser();\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setAddPortfolio(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: true,\n      maxWidth: 'sm',\n      disableEscapeKeyDown: true,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create a new portfolio to track all of your crypto coins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          name: \"newPortfolio\",\n          onSubmit: handleNewPortfolio,\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              m: 1,\n              minWidth: 120,\n              width: 300\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Enter your new portfolio name\",\n              fullWidth: true,\n              autoFocus: true,\n              name: \"name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            color: 'white',\n            background: 'purple',\n            borderRadius: \"10px\",\n            \":hover\": {\n              background: '#46016b'\n            }\n          },\n          onClick: () => setAddPortfolio(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPortfolio, \"dVkDIfRb5RN4FjtonjBYYwpg89o=\");\n\n_c = NewPortfolio;\nexport default NewPortfolio;\n{\n  /* <Grid item xs={12} sm={6}>\n  <form onSubmit={handleNewPortfolio}>\n     <TextField\n         label=\"Enter your portfolio name\"\n         fullWidth\n         autoFocus\n         name='name'\n         required\n         helperText={'Add a portfolio name'}\n     />\n     <Button type=\"submit\" variant='container' color=\"primary\" raised>\n         Create\n     </Button>\n     <Button color='success'onClick={() => setAddPortfolio(false)}>Close</Button>\n  </form>\n  </Grid> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPortfolio\");","map":{"version":3,"sources":["/Users/aidanmatchette/dev/projects/vetfit_frontend/src/components/NewPortfolio/NewPortfolio.js"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","Grid","InputLabel","TextField","cryptoMagicAPI","getPortfoliosByUser","React","useState","CryptoState","NewPortfolio","setAddPortfolio","setUserPortfolios","open","setOpen","portfolios","listPortfoliosByUser","handleNewPortfolio","event","preventDefault","newPortfolioForm","portfolio_name","target","elements","value","owner","localStorage","getItem","holdings","data","createPortfolio","handleClose","display","flexWrap","justifyContent","m","minWidth","width","color","background","borderRadius"],"mappings":"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","sourcesContent":["import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Grid, InputLabel, TextField } from '@mui/material'\nimport cryptoMagicAPI from '../../api/cryptoAPI'\nimport getPortfoliosByUser from '../../Context.js'\nimport React, { useState } from 'react'\nimport { CryptoState } from '../../Context'\n\nconst NewPortfolio = ({setAddPortfolio}) => {\n    const {setUserPortfolios} = CryptoState();\n    const [open, setOpen] = useState(true);\n\n    const getPortfoliosByUser = async () => {\n        const portfolios = await cryptoMagicAPI.listPortfoliosByUser()\n        setUserPortfolios(portfolios)\n    }\n\n    const handleNewPortfolio = async (event) => {\n        event.preventDefault()\n        setOpen(false)\n        const newPortfolioForm = {\n            portfolio_name: event.target.elements['name'].value,\n            owner: localStorage.getItem('user_id'), \n            holdings: []\n        }\n        const data = await cryptoMagicAPI.createPortfolio(newPortfolioForm)\n        if(data) {\n            setAddPortfolio(false)\n            getPortfoliosByUser()\n        }\n    }\n    const handleClose = () => {\n        setOpen(false)\n        setAddPortfolio(false)\n    }\n\n    return (\n        <div>\n            <Dialog fullWidth={true}\n            maxWidth={'sm'}\n            disableEscapeKeyDown open={open} onClose={handleClose}>\n            <DialogTitle>Create a new portfolio to track all of your crypto coins</DialogTitle>\n            {/* <form onSubmit={handleNewPortfolio}> */}\n                <DialogContent>\n                        <Box component=\"form\" name='newPortfolio' onSubmit={handleNewPortfolio} sx={{ display: 'flex', flexWrap: 'wrap', justifyContent:'center'}}>\n                        <FormControl sx={{ m: 1, minWidth: 120, width: 300 }}>\n                            <TextField\n                                label=\"Enter your new portfolio name\"\n                                fullWidth\n                                autoFocus\n                                name='name'\n                                required\n                            />\n                        </FormControl>\n                        </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button sx={{color: 'white', background: 'purple', borderRadius: \"10px\", \":hover\": {background: '#46016b'}}} onClick={() => setAddPortfolio(false)}>Cancel</Button>\n                </DialogActions>\n            {/* </form> */}\n            </Dialog>    \n        </div>\n    )\n}\n\nexport default NewPortfolio\n\n\n\n{/* <Grid item xs={12} sm={6}>\n<form onSubmit={handleNewPortfolio}>\n    <TextField\n        label=\"Enter your portfolio name\"\n        fullWidth\n        autoFocus\n        name='name'\n        required\n        helperText={'Add a portfolio name'}\n    />\n    <Button type=\"submit\" variant='container' color=\"primary\" raised>\n        Create\n    </Button>\n    <Button color='success'onClick={() => setAddPortfolio(false)}>Close</Button>\n</form>\n</Grid> */}"]},"metadata":{},"sourceType":"module"}